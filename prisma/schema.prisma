generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model artikel {
  artikel_id        Int               @id @default(autoincrement())
  artikelname       String            @db.VarChar(255)
  unterkategorie_id Int
  preis             Decimal?          @db.Decimal(10, 2)
  beschreibung      String?           @db.Text
  bild_url          String?           @db.VarChar(255)
  zustand           String?           @db.VarChar(15)
  einkaufs_datum    DateTime?         @default(now()) @db.DateTime(0)
  belegt_von        DateTime?         @db.DateTime(0)
  belegt_bis        DateTime?         @db.DateTime(0)
  anlagenummer      String?           @db.VarChar(15)
  edit_date         DateTime?         @default(now()) @db.DateTime(0)
  besitzer_id       Int?
  firma             String?           @db.VarChar(50)
  model             String?           @db.VarChar(35)
  seriennummer      String?           @db.VarChar(55)
  unterkategorie    unterkategorie    @relation(fields: [unterkategorie_id], references: [unterkategorie_id], onDelete: NoAction, onUpdate: NoAction, map: "artikel_ibfk_1")
  personal          personal?         @relation(fields: [besitzer_id], references: [Personalnummer], onDelete: NoAction, onUpdate: NoAction, map: "artikel_personal_Personalnummer_fk")
  assets            assets?
  electronics       electronics?
  projekt_artikel   projekt_artikel[]
  simkarten         simkarten?
  notebook          notebook?
  handy             Handy?

  @@index([besitzer_id], map: "artikel_personal_Personalnummer_fk")
  @@index([unterkategorie_id], map: "unterkategorie_id")
}

model notebook {
  notebook_id           Int     @id @default(autoincrement())
  admin_konto_name      String? @db.VarChar(255)
  admin_konto_password  String? @db.VarChar(255)
  user_konto_name       String? @db.VarChar(255)
  user_konto_password   String? @db.VarChar(255)
  artikel_artikel_id_fk Int     @unique
  artikel               artikel @relation(fields: [artikel_artikel_id_fk], references: [artikel_id], onDelete: NoAction, onUpdate: NoAction, map: "notebook_artikel_artikel_id_fk")

  @@index([artikel_artikel_id_fk], map: "artikel_artikel_id_fk")
}

model Handy {
  handy_id              Int     @id @default(autoincrement())
  imei_1                String  @db.VarChar(255)
  besitzer              String  @db.VarChar(255)
  sim_karten_nummer     String? @db.VarChar(255)
  bildschirmsperre_pin  String? @db.VarChar(255)
  email_adresse         String? @db.VarChar(255)
  password              String? @db.VarChar(255)
  artikel_artikel_id_fk Int     @unique
  artikel               artikel @relation(fields: [artikel_artikel_id_fk], references: [artikel_id], onDelete: NoAction, onUpdate: NoAction, map: "handy_artikel_artikel_id_fk")

  @@index([artikel_artikel_id_fk], map: "artikel_artikel_id_fk")
}

model assets {
  ID             Int     @id @unique(map: "tblbe-assets_ID_uindex")
  Inventarnummer Int?
  artikel        artikel @relation(fields: [ID], references: [artikel_id], onDelete: NoAction, onUpdate: NoAction, map: "tblbe-assets_artikel_artikel_id_fk")
}

model electronics {
  ID                Int     @id @unique(map: "acu_ID_uindex")
  MAC_Adresse       String? @map("MAC-Adresse") @db.VarChar(255)
  IP_Adresse_ACU    String? @map("IP-Adresse ACU") @db.VarChar(256)
  Router            String? @db.VarChar(255)
  IP_Adresse_Router String? @map("IP-Adresse Router") @db.VarChar(255)
  artikel           artikel @relation(fields: [ID], references: [artikel_id], onDelete: NoAction, onUpdate: NoAction, map: "acu_artikel_artikel_id_fk")
}

model kategorien {
  kategorie_id   Int              @id @default(autoincrement())
  kategoriename  String           @unique(map: "kategoriename") @db.VarChar(255)
  unterkategorie unterkategorie[]
}

model personal {
  Personalnummer      Int           @id
  Vorname             String?       @db.VarChar(50)
  Nachname            String?       @db.VarChar(50)
  Geburtsdatum        DateTime?     @db.Date
  Abteilung           String?       @db.VarChar(50)
  Position            String?       @db.VarChar(50)
  Gehalt              Decimal?      @db.Decimal(10, 2)
  usrzugangs_daten_ID Int?
  artikel             artikel[]
  zugangsdaten        zugangsdaten? @relation(fields: [usrzugangs_daten_ID], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "personal_ibfk_1")

  @@index([usrzugangs_daten_ID], map: "usrzugangs_daten_ID")
}

model projekt_artikel {
  projekt_artikel_id Int         @id @default(autoincrement())
  projekt_id         Int
  artikel_id         Int
  menge              Int
  tblprojekte        tblprojekte @relation(fields: [projekt_id], references: [ID], onDelete: NoAction, onUpdate: NoAction, map: "projekt_artikel_ibfk_1")
  artikel            artikel     @relation(fields: [artikel_id], references: [artikel_id], onDelete: NoAction, onUpdate: NoAction, map: "projekt_artikel_ibfk_2")

  @@index([artikel_id], map: "artikel_id")
  @@index([projekt_id], map: "projekt_id")
}

model simkarten {
  simkarten_id Int     @id @default(autoincrement())
  kundennummer String  @db.VarChar(255)
  rufnummer    String  @db.VarChar(255)
  tarif        String  @db.VarChar(255)
  pin          String  @db.VarChar(255)
  puk          String  @db.VarChar(255)
  einsatzort   String  @db.VarChar(255)
  aktiv        Boolean
  artikel_id   Int     @unique
  artikel      artikel @relation(fields: [artikel_id], references: [artikel_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([artikel_id], map: "artikel_id")
}

model tblprojekte {
  ID                  Int               @id
  Standort            String?           @db.TinyText
  Niederlassung       String?           @db.VarChar(255)
  Auftragsart         String?           @db.VarChar(255)
  Status              String?           @db.VarChar(255)
  Logistikkoordinator String?           @db.VarChar(255)
  LK_1                String?           @db.VarChar(255)
  LK_2                String?           @db.VarChar(255)
  ZuKo                String?           @db.VarChar(255)
  Auftragsdatum       String?           @db.VarChar(255)
  Startdatum          String?           @db.VarChar(255)
  Kommentar           String?           @db.VarChar(255)
  Anlagenummer        Int?
  PM_1                String?           @db.VarChar(255)
  PM_2                String?           @db.VarChar(255)
  Endtermin           String?           @db.VarChar(255)
  Netto_Auftragswert  String?           @db.VarChar(255)
  projekt_artikel     projekt_artikel[]
}

model unterkategorie {
  unterkategorie_id  Int        @id @default(autoincrement())
  unterkategoriename String     @db.VarChar(255)
  kategorie_id       Int
  artikel            artikel[]
  kategorien         kategorien @relation(fields: [kategorie_id], references: [kategorie_id], onDelete: NoAction, onUpdate: NoAction, map: "unterkategorie_ibfk_1")

  @@index([kategorie_id], map: "kategorie_id")
}

model zugangsdaten {
  ID                    Int        @id @default(autoincrement())
  Programm              String     @db.VarChar(50)
  UserName              String     @db.VarChar(50)
  Password              String     @db.VarChar(50)
  Role                  String?    @db.VarChar(50)
  simkartenSimkarten_id Int?
  personal              personal[]
}
